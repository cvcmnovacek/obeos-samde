//------------------------------------------------------------------------------
//
// Project: OBEOS METADATA EDITOR
// Authors: Natascha Neumaerker, Siemens Convergence Creators, Prague (CZ)
//          Milan Novacek, Siemens Convergence Creators, Prague (CZ)
//          Radim Zajonc, Siemens Convergence Creators, Prague (CZ)
//          
//------------------------------------------------------------------------------
// Copyright (C) 2017 Siemens Convergence Creators, Prague (CZ)
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies of this Software or works derived from this Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//------------------------------------------------------------------------------

package esa.obeos.metadataeditor.model.impl.jxb;

import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Map.Entry;

import javax.xml.XMLConstants;

import com.sun.xml.bind.marshaller.NamespacePrefixMapper;

import esa.obeos.metadataeditor.model.api.ModelVersion;

/** The Class allows to override default name space prefixes generated by JAXB */ 
public class MdeNamespacePrefixMapper extends NamespacePrefixMapper 
{
	/** the prefix map */
	Map<String, String> prefixMap;

	/** 
	 * The constructor
	 */
	public MdeNamespacePrefixMapper()
	{
        this.prefixMap = new LinkedHashMap<String, String>();
        this.prefixMap.put("http://www.isotc211.org/2005/gmd",       "gmd");
		this.prefixMap.put("http://www.isotc211.org/2005/gco",       "gco");
        this.prefixMap.put("http://www.isotc211.org/2005/gmi",       "gmi");
        this.prefixMap.put("http://standards.iso.org/iso/19115/-2/gmi/1.0",       "gmi");
		this.prefixMap.put("http://www.isotc211.org/2005/gfc",       "gfc");
		this.prefixMap.put("http://www.opengis.net/gml/3.2",         "gml");
		this.prefixMap.put("http://www.isotc211.org/2005/gmx",       "gmx");
		this.prefixMap.put("http://www.isotc211.org/2005/gsr",       "gsr");
		this.prefixMap.put("http://www.isotc211.org/2005/gss",       "gss");
		this.prefixMap.put("http://www.isotc211.org/2005/gts",       "gts");
		this.prefixMap.put("http://www.isotc211.org/2005/srv",       "srv");
		this.prefixMap.put("http://www.w3.org/1999/xlink",           "xlink");
		this.prefixMap.put("http://www.w3.org/2001/SMIL20/",         "smil20");
		this.prefixMap.put("http://www.w3.org/2001/SMIL20/Language", "smil20L");
		this.prefixMap.put("http://www.w3.org/2001/XMLSchema",       "xs");
	}

	/** 
	 * Returns a custom name space prefix for the given name space URI. 
	 */
	@Override
	public String getPreferredPrefix(String namespaceUri, String suggestion, boolean requirePrefix) 
	{
		String ret = suggestion;

		String prefix = this.prefixMap.get(namespaceUri);
		if (null != prefix)
		{
			ret = prefix;
		}

		return ret;
	}

	public String getNamespaceUri(String prefix, ModelVersion modelVersion)
	{
	    String ret = XMLConstants.NULL_NS_URI;
	    
	    for( Entry<String, String> entry : this.prefixMap.entrySet() )
	    {
	        if( entry.getValue().equals(prefix) )
	        {
	            ret = entry.getKey();
	            if ("gmi".equals(prefix) && ModelVersion.Rel2015 == modelVersion)
	            {
	                // There are two gmi URI, the first one for the Beta model 
	                // and the second one for the model released in 2015.
	                // So we need to skip the the first URI in case of the released in 2015.
	                continue;
	            }
	            break;
	        }
	    }
	    
	    return ret;
	}
}
